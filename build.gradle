plugins {
    // Define que o projeto é um módulo Java padrão
    id 'java'
    // Plugin do Spring Boot, define o ciclo de vida da aplicação
    id 'org.springframework.boot' version '3.5.6'
    // Plugin para gerenciar versões de dependências do Spring Cloud
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.EngCode'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        // Define a versão do Java a ser utilizada (Java 17 é o padrão para Spring Boot 3+)
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        // Garante que o Lombok só esteja disponível na compilação, e não no classpath final
        extendsFrom annotationProcessor
    }
}

repositories {
    // Repositório central de onde as dependências são baixadas
    mavenCentral()
}

ext {
    // Define a versão do Spring Cloud para ser usada na seção dependencyManagement
    set('springCloudVersion', "2025.0.0")
}

dependencies {
    // BLOCÃO: DEPENDÊNCIAS DE EXECUÇÃO (RUNTIME/COMPILE)

    // Core: Dependência para construir APIs REST (Controllers)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Core: Dependência do Feign Client, essencial para comunicação entre microsserviços
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // === CORREÇÃO CRÍTICA PARA O ERRO PATCH ===
    // Adiciona o cliente Apache HTTP, que suporta o método PATCH, resolvendo a ProtocolException do Feign.
    implementation 'io.github.openfeign:feign-hc5:13.6'

    // Documentação: Adiciona o Springdoc (Swagger) para documentar seus endpoints
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

    // Lombok: Necessário apenas em tempo de compilação
    compileOnly 'org.projectlombok:lombok'
    // Processador: Gera os Getters, Setters, etc. antes da compilação final
    annotationProcessor 'org.projectlombok:lombok'

    // Testes: Framework básico para testes unitários
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        // Importa o "BOM" (Bill of Materials) do Spring Cloud, gerenciando as versões das dependências relacionadas
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}